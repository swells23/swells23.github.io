{"version":3,"file":"component---src-pages-projects-js-ec638b6f2f9d478422b1.js","mappings":"iMAeiBA,EAAQ,MCFzB,MARA,YAAsC,EAAlBC,KAAmB,IAAbC,EAAY,EAAZA,SACxB,OACE,gBAAC,IAAD,CAAiBC,UAAU,WAAWD,SAAUA,GAInD,C","sources":["webpack://swells23.github.io/./src/components/Projects/Gallery/Gallery.js","webpack://swells23.github.io/./src/pages/projects.js"],"sourcesContent":["import {\r\n    Button,\r\n    Card,\r\n    CardActionArea,\r\n    CardActions,\r\n    CardContent,\r\n    Container,\r\n    Grid,\r\n    makeStyles,\r\n    Typography\r\n} from '@material-ui/core';\r\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\r\nimport React from 'react';\r\nimport styles from './Gallery.styles';\r\n\r\nconst DATA_MAP = require('../../../data/gallery.json');\r\n\r\nconst Gallery = ({ data }) => {\r\n    const classes = makeStyles(styles)(),\r\n        getGalleryItems = () => {\r\n            const galleryData = DATA_MAP.GalleryData,\r\n                gqlGalleryEdges = data.allFile.edges,\r\n                gqlGalleryNodes = new Map();\r\n\r\n            gqlGalleryEdges.forEach(item => {\r\n                gqlGalleryNodes.set(item.node.base, item.node);\r\n            });\r\n\r\n            return galleryData.map(item => {\r\n                const imgSrc = getImage(gqlGalleryNodes.get(item.src));\r\n\r\n                return (\r\n                    <Grid item key={item.title} md={6} lg={4}>\r\n                        <Card>\r\n                            <CardActionArea>\r\n                                <GatsbyImage image={imgSrc} alt={item.title} />\r\n                                <CardContent>\r\n                                    <Typography gutterBottom variant='h5' component='h2'>\r\n                                        {item.title}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </CardActionArea>\r\n                            <CardActions>\r\n                                {item.githubSrc && (\r\n                                    <Button size='small' className={classes.githubBtn} href={item.githubSrc} target='_blank' aria-label={`${item.title} github`}>\r\n                                        Github\r\n                                    </Button>\r\n                                )}\r\n                                {item.websiteSrc && (\r\n                                    <Button size='small' className={classes.websiteBtn} href={item.websiteSrc} target='_blank' aria-label={`${item.title} website`}>\r\n                                        Website\r\n                                    </Button>\r\n                                )}\r\n                                {item.prototypeSrc && (\r\n                                    <Button size='small' className={classes.prototypeBtn} href={item.prototypeSrc} target='_blank' aria-label={`${item.title} prototype`}>\r\n                                        Prototype\r\n                                    </Button>\r\n                                )}\r\n                            </CardActions>\r\n                        </Card>\r\n                    </Grid>\r\n                )\r\n            })\r\n        };\r\n\r\n    return (\r\n        <Container component='section' className={classes.root}>\r\n            <Grid container spacing={3}>\r\n                {getGalleryItems()}\r\n            </Grid>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Gallery;","import { graphql } from 'gatsby';\r\nimport React from 'react';\r\nimport { DefaultTemplate } from '../components/layout';\r\nimport { Gallery } from '../components/Projects';\r\n\r\nfunction Projects({ data, location }) {\r\n  return (\r\n    <DefaultTemplate headTitle=\"Projects\" location={location}>\r\n      {/* <Gallery data={data} /> */}\r\n    </DefaultTemplate>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\nexport const pageQuery = graphql`\r\n  query {\r\n    allFile(filter: {relativeDirectory: {eq: \"images/gallery\"}}) {\r\n      edges {\r\n        node {\r\n          base\r\n          childImageSharp {\r\n            gatsbyImageData(transformOptions: {fit: FILL}, aspectRatio: 1.7778)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["require","data","location","headTitle"],"sourceRoot":""}